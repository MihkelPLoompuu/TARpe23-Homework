REST - REST (representational state transfer) on tarkvaraarhitektuuri laad, 
mis seab veebirakenduse loomisele kindlad piirid. 
Tihti kutsutakse selliseid veebirakendusi ka RESTful veebirakendusteks. 
Veebirakendused, mis on ehitatud REST arhitektuuril, tagavad internetis rakenduste koostoimimise. 
RESTful rakendused lubavad teistel süsteemidel juurde pääseda ja manipuleerida enda ressursse, 
kasutades selleks eelnevalt kindlaks määratud ilma olekuta päringuid. Muud arhitektuurid,
näiteks SOAP, kasutavad omaenda toimingukomplekte.

SOAP - SOAP API loogika on kirjutatud veebiteenuse kirjelduskeeles (WSDL). 
See API kirjelduskeel määratleb lõpp-punktid ja kirjeldab kõiki teostatavaid protsesse.
See võimaldab erinevatel programmeerimiskeeltel ja IDE-del side kiiresti seadistada.

GraphQL -GraphQL alustab skeemi koostamisega , mis kirjeldab kõiki päringuid, 
mida saate GraphQL API-s teha, ja kõiki tüüpe , mida need tagastavad. 
Skeemi koostamine on raske, kuna see nõuab tugevat tippimist skeemi määratluskeeles (SDL).
Kui skeem on enne päringu esitamist olemas, saab klient oma päringut kontrollida, 
veendumaks, et server suudab sellele vastata. Taustarakenduseni jõudmisel tõlgendatakse 
GraphQL-i toiming kogu skeemi suhtes ja lahendatakse kasutajaliidese rakenduse andmetega. 
Saates serverile ühe ulatusliku päringu, tagastab API JSON-vastuse täpselt meie küsitud andmete kujuga.


Soap plussid
Keele- ja platvormi-agnostik. Sisseehitatud funktsioon veebipõhiste teenuste loomiseks võimaldab 
SOAP-il suhelda ja muuta vastused keelest ja platvormist sõltumatuks.

Seotud mitmesuguste transpordiprotokollidega. SOAP on edastusprotokollide osas 
paindlik mitme stsenaariumi jaoks.

Sisseehitatud veatöötlus. SOAP API spetsifikatsioon võimaldab tagastada Retry
 XML-teate koos veakoodi ja selle selgitusega.

Mitmed turvalaiendused. WS-Security protokollidega integreeritud SOAP vastab 
ettevõtte tasemel tehingukvaliteedile. See tagab tehingute privaatsuse ja terviklikkuse,
võimaldades samal ajal krüptimist sõnumite tasemel.

REST plussid
Lahtisidestatud klient ja server. Kliendi ja serveri võimalikult lahtisidumine võimaldab
REST paremat abstraktsiooni kui RPC. Abstraktsioonitasemetega süsteem suudab oma üksikasju
kapseldada, et selle omadusi paremini tuvastada ja säilitada. See muudab REST API piisavalt
paindlikuks, et aja jooksul areneda, jäädes samas stabiilseks süsteemiks.

Leitavus. Kliendi ja serveri vaheline suhtlus kirjeldab kõike, nii et REST API-ga
 suhtlemise mõistmiseks pole vaja välist dokumentatsiooni.

Vahemälusõbralik. Paljusid HTTP-tööriistu taaskasutades on REST ainus stiil, 
mis võimaldab andmete vahemällu salvestada HTTP tasemel. Seevastu mis tahes muu 
API vahemällu salvestamine nõuab täiendava vahemälumooduli konfigureerimist.

Mitme vormingu tugi. Võimalus toetada andmete salvestamiseks ja vahetamiseks mitut 
vormingut on üks põhjusi, miks REST on praegu avalike API-de loomisel domineeriv valik.

GraphQL plussid
Trükitud skeem. GraphQL avaldab eelnevalt, mida ta saab teha, mis parandab selle leitavust. 
Suunates kliendile GraphQL API-le, saame teada, millised päringud on saadaval.

Sobib väga hästi graafikulaadsete andmetega. Andmed, mis lähevad kaugele lingitud suhetesse, 
kuid ei sobi ühtsete andmete jaoks.

Ei mingit versioonimist. Versioonide loomise parim tava on API-d üldse mitte versioonida.

Kui REST pakub mitut API versiooni, siis GraphQL kasutab ühte arenevat versiooni, 
mis annab pideva juurdepääsu uutele funktsioonidele ning aitab kaasa puhtamale ja paremini 
hooldatavale serverikoodile.

Üksikasjalikud veateated. Sarnaselt SOAP-iga pakub GraphQL üksikasju ilmnenud vigade kohta.
 Selle veateade sisaldab kõiki lahendajaid ja viitab täpselt vigasele päringu osale.

Paindlikud load. GraphQL võimaldab teatud funktsioone valikuliselt paljastada, säilitades
samal ajal privaatset teavet. Samal ajal ei avalda REST-arhitektuur andmeid osade kaupa. 
See on kas kõik või mitte midagi.

https://www.altexsoft.com/blog/soap-vs-rest-vs-graphql-vs-rpc/ 